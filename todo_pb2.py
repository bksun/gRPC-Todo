# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: todo.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='todo.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\ntodo.proto\"D\n\x04Mode\x12\x17\n\x02id\x18\x01 \x01(\x0e\x32\x0b.Mode.State\"#\n\x05State\x12\r\n\tCOMPLETED\x10\x00\x12\x0b\n\x07YETTODO\x10\x01\"\x16\n\x08TodoCode\x12\n\n\x02id\x18\x01 \x01(\x05\"*\n\x04Todo\x12\x15\n\x02id\x18\x01 \x01(\x0b\x32\t.TodoCode\x12\x0b\n\x03msg\x18\x02 \x01(\t2g\n\nRouteGuide\x12\x1d\n\x07GetTodo\x12\t.TodoCode\x1a\x05.Todo\"\x00\x12\x1d\n\tListTodos\x12\x05.Mode\x1a\x05.Todo\"\x00\x30\x01\x12\x1b\n\x07\x41\x64\x64Todo\x12\x05.Todo\x1a\x05.Todo\"\x00\x30\x01\x62\x06proto3')
)



_MODE_STATE = _descriptor.EnumDescriptor(
  name='State',
  full_name='Mode.State',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='COMPLETED', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='YETTODO', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=47,
  serialized_end=82,
)
_sym_db.RegisterEnumDescriptor(_MODE_STATE)


_MODE = _descriptor.Descriptor(
  name='Mode',
  full_name='Mode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='Mode.id', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _MODE_STATE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14,
  serialized_end=82,
)


_TODOCODE = _descriptor.Descriptor(
  name='TodoCode',
  full_name='TodoCode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='TodoCode.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=84,
  serialized_end=106,
)


_TODO = _descriptor.Descriptor(
  name='Todo',
  full_name='Todo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='Todo.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='msg', full_name='Todo.msg', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=108,
  serialized_end=150,
)

_MODE.fields_by_name['id'].enum_type = _MODE_STATE
_MODE_STATE.containing_type = _MODE
_TODO.fields_by_name['id'].message_type = _TODOCODE
DESCRIPTOR.message_types_by_name['Mode'] = _MODE
DESCRIPTOR.message_types_by_name['TodoCode'] = _TODOCODE
DESCRIPTOR.message_types_by_name['Todo'] = _TODO
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Mode = _reflection.GeneratedProtocolMessageType('Mode', (_message.Message,), {
  'DESCRIPTOR' : _MODE,
  '__module__' : 'todo_pb2'
  # @@protoc_insertion_point(class_scope:Mode)
  })
_sym_db.RegisterMessage(Mode)

TodoCode = _reflection.GeneratedProtocolMessageType('TodoCode', (_message.Message,), {
  'DESCRIPTOR' : _TODOCODE,
  '__module__' : 'todo_pb2'
  # @@protoc_insertion_point(class_scope:TodoCode)
  })
_sym_db.RegisterMessage(TodoCode)

Todo = _reflection.GeneratedProtocolMessageType('Todo', (_message.Message,), {
  'DESCRIPTOR' : _TODO,
  '__module__' : 'todo_pb2'
  # @@protoc_insertion_point(class_scope:Todo)
  })
_sym_db.RegisterMessage(Todo)



_ROUTEGUIDE = _descriptor.ServiceDescriptor(
  name='RouteGuide',
  full_name='RouteGuide',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=152,
  serialized_end=255,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetTodo',
    full_name='RouteGuide.GetTodo',
    index=0,
    containing_service=None,
    input_type=_TODOCODE,
    output_type=_TODO,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ListTodos',
    full_name='RouteGuide.ListTodos',
    index=1,
    containing_service=None,
    input_type=_MODE,
    output_type=_TODO,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddTodo',
    full_name='RouteGuide.AddTodo',
    index=2,
    containing_service=None,
    input_type=_TODO,
    output_type=_TODO,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_ROUTEGUIDE)

DESCRIPTOR.services_by_name['RouteGuide'] = _ROUTEGUIDE

# @@protoc_insertion_point(module_scope)
